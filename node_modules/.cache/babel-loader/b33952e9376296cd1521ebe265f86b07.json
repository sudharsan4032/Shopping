{"ast":null,"code":"var _jsxFileName = \"E:\\\\shope-code\\\\src\\\\components\\\\SignInForm\\\\SignInForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signInWithGooglePopup, signInAuthUserWithEmailAndPassword } from \"../../utils/firebase/firebase.utils\";\nimport Button, { BUTTON_TYPES_CLASSES } from \"../Button/Button\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { Buttons, SignInFormContainer } from \"./SignInForm.Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formFieldsValues = {\n  email: \"\",\n  password: \"\"\n};\n\nconst SignInForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formFields, setFormFields] = useState(formFieldsValues);\n  const {\n    email,\n    password\n  } = formFields; // Google Sign In\n\n  const signInWithGoogle = async () => {\n    await signInWithGooglePopup(); // Creating user document\n\n    console.log(\"Login Successfully!\"); // Redirect to home page\n\n    navigate(\"/\");\n  }; // Reset the form fields\n\n\n  const resetFormFields = () => {\n    setFormFields(formFieldsValues);\n  }; // Handles the input changes\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  }; // Handles the form submit - login using email ID\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await signInAuthUserWithEmailAndPassword(email, password); // Reset the form\n\n      resetFormFields(); // For Debug\n\n      console.log(\"Login Successfully!\"); // Redirect to home page\n\n      navigate(\"/\");\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/user-not-found\":\n          alert(\"User not found!\");\n          break;\n\n        case \"auth/wrong-password\":\n          alert(\"Incorrect password!\");\n          break;\n\n        default:\n          console.log(\"error in sign in using email and pass!\", error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInFormContainer, {\n    className: \"sign-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an acount?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        value: email,\n        onChange: handleChange,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: handleChange,\n        name: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          buttonType: BUTTON_TYPES_CLASSES.google,\n          onClick: signInWithGoogle,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInForm, \"ydgY+8o+KIaXkV4EcXP2pC2Upok=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["E:/shope-code/src/components/SignInForm/SignInForm.jsx"],"names":["useState","useNavigate","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","Button","BUTTON_TYPES_CLASSES","FormInput","Buttons","SignInFormContainer","formFieldsValues","email","password","SignInForm","navigate","formFields","setFormFields","signInWithGoogle","console","log","resetFormFields","handleChange","e","name","value","target","handleSubmit","preventDefault","error","code","alert","message","google"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  signInWithGooglePopup,\n  signInAuthUserWithEmailAndPassword,\n} from \"../../utils/firebase/firebase.utils\";\n\nimport Button, { BUTTON_TYPES_CLASSES } from \"../Button/Button\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { Buttons, SignInFormContainer } from \"./SignInForm.Styles\";\n\nconst formFieldsValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst SignInForm = () => {\n  const navigate = useNavigate();\n\n  const [formFields, setFormFields] = useState(formFieldsValues);\n  const { email, password } = formFields;\n\n  // Google Sign In\n  const signInWithGoogle = async () => {\n    await signInWithGooglePopup();\n    // Creating user document\n    console.log(\"Login Successfully!\");\n    // Redirect to home page\n    navigate(\"/\");\n  };\n\n  // Reset the form fields\n  const resetFormFields = () => {\n    setFormFields(formFieldsValues);\n  };\n\n  // Handles the input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  // Handles the form submit - login using email ID\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await signInAuthUserWithEmailAndPassword(email, password);\n      // Reset the form\n      resetFormFields();\n      // For Debug\n      console.log(\"Login Successfully!\");\n      // Redirect to home page\n      navigate(\"/\");\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/user-not-found\":\n          alert(\"User not found!\");\n          break;\n        case \"auth/wrong-password\":\n          alert(\"Incorrect password!\");\n          break;\n        default:\n          console.log(\"error in sign in using email and pass!\", error.message);\n      }\n    }\n  };\n\n  return (\n    <SignInFormContainer className='sign-in-container'>\n      <h2>Already have an acount?</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label='Email'\n          type='email'\n          value={email}\n          onChange={handleChange}\n          name='email'\n          required\n        />\n        <FormInput\n          label='Password'\n          type='password'\n          value={password}\n          onChange={handleChange}\n          name='password'\n          required\n        />\n\n        <Buttons className='buttons'>\n          <Button type='submit'>Sign In</Button>\n          <Button\n            type='button'\n            buttonType={BUTTON_TYPES_CLASSES.google}\n            onClick={signInWithGoogle}\n          >\n            Sign in with Google\n          </Button>\n        </Buttons>\n      </form>\n    </SignInFormContainer>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}