{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sudharsan\\\\Downloads\\\\devshop-main\\\\devshop-main\\\\src\\\\contexts\\\\user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\"; // as the actual value we want to access\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubcribe = onAuthStateChangedListener(user => {\n      // If user exists create a document for that user\n      if (user) createUserDocumentFromAuth(user); // Set the user\n\n      setCurrentUser(user);\n    });\n    return unsubcribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/Sudharsan/Downloads/devshop-main/devshop-main/src/contexts/user.context.jsx"],"names":["createContext","useState","useEffect","onAuthStateChangedListener","createUserDocumentFromAuth","UserContext","currentUser","setCurrentUser","UserProvider","children","value","unsubcribe","user"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SACEC,0BADF,EAEEC,0BAFF,QAGO,kCAHP,C,CAKA;;;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;AACvCM,EAAAA,WAAW,EAAE,IAD0B;AAEvCC,EAAAA,cAAc,EAAE,MAAM;AAFiB,CAAD,CAAjC;AAKP,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACH,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMS,KAAK,GAAG;AAAEJ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAd;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAGR,0BAA0B,CAAES,IAAD,IAAU;AACtD;AACA,UAAIA,IAAJ,EAAUR,0BAA0B,CAACQ,IAAD,CAA1B,CAF4C,CAGtD;;AACAL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACD,KAL4C,CAA7C;AAOA,WAAOD,UAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,KAA7B;AAAA,cAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport {\n  onAuthStateChangedListener,\n  createUserDocumentFromAuth,\n} from \"../utils/firebase/firebase.utils\";\n\n// as the actual value we want to access\nexport const UserContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = { currentUser, setCurrentUser };\n\n  useEffect(() => {\n    const unsubcribe = onAuthStateChangedListener((user) => {\n      // If user exists create a document for that user\n      if (user) createUserDocumentFromAuth(user);\n      // Set the user\n      setCurrentUser(user);\n    });\n\n    return unsubcribe;\n  }, []);\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}